#user  nobody;
worker_processes  1;

error_log /dev/stdout info;

#pid        logs/nginx.pid;

env OID_SESSION_STORAGE;
env OID_SESSION_MEMCACHE_HOST;
env OID_SESSION_MEMCACHE_PORT;
env OID_SESSION_SECRET;
env OID_SESSION_CHECK_SSI;
env OID_SESSION_NAME;
env OID_DISCOVERY;
env OID_CLIENT_ID;
env OID_CLIENT_SECRET;
env OID_REDIRECT_PATH;
env OID_LOGOUT_PATH;
env OID_AUTH_PATH;
env OID_AUTH_METHOD;
env OID_AUTH_SCOPE;
env OID_ID_TOKEN_HEADERS;

events {
    worker_connections  1024;
}

http {
    #lua_code_cache off;
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    lua_shared_dict discovery 10m;

    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 5;

    resolver 8.8.8.8;

    server {
        listen 80;
        server_name _;

        large_client_header_buffers 8 64k;
        client_header_buffer_size 64k;

        set_by_lua_block $session_storage { return os.getenv("OID_SESSION_STORAGE"); }
        set_by_lua_block $session_memcache_host { return os.getenv("OID_SESSION_MEMCACHE_HOST"); }
        set_by_lua_block $session_memcache_port { return os.getenv("OID_SESSION_MEMCACHE_PORT"); }
        set_by_lua_block $session_secret { return os.getenv("OID_SESSION_SECRET"); }
        set_by_lua_block $session_check_ssi { return os.getenv("OID_SESSION_CHECK_SSI"); }
        set_by_lua_block $session_name { return os.getenv("OID_SESSION_NAME"); }

        location /favicon.ico {
          return 404;
        }

        location /healthz {
          return 201;
        }

        location / {
          access_by_lua_file lua/auth.lua;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
